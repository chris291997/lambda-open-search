version: 0.2
run-as: root  # Run the build process with root privileges

phases:
  install:
    runtime-versions:
      nodejs: 12
    commands:
      - echo "Installing serverless"
      - ASSUME_ROLE_ARN=${DEPLOY_ROLE}
      - echo $ASSUME_ROLE_ARN
      - aws sts get-caller-identity
      - TEMP_ROLE=`aws sts assume-role --role-arn $ASSUME_ROLE_ARN --role-session-name serverless-api`
      - export TEMP_ROLE
      - export AWS_ACCESS_KEY_ID=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.AccessKeyId')
      - export AWS_SECRET_ACCESS_KEY=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.SecretAccessKey')
      - export AWS_SESSION_TOKEN=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.SessionToken')
      - export AWS_ACCESS_PROFILE="TEMP_AWS_PROFILE"
      - npm install -g serverless@3.38.0 --unsafe && npm install --production

  pre_build:
    commands:
      - SERVICE_NAME="BRAD_API"
      - PARAM_PREFIX="/${SERVICE_NAME}/${STAGE}"
      - echo $PARAM_PREFIX
      - PARAMETER="env"
      - PARAM_KEY="$PARAM_PREFIX/$PARAMETER"
      - echo $PARAM_KEY
      - DEST_FILENAME="herpderp.${STAGE}"
      - aws ssm get-parameter --name $PARAM_KEY --region $REGION --output text --query Parameter.Value > $DEST_FILENAME
      - export $(grep -v '^#' $DEST_FILENAME | xargs -d '\n')
      - echo $DEST_FILENAME
      - mkdir -p /tmp/build  # Create a new directory with write permissions

  build:
    commands:
      - serverless deploy --stage $STAGE --aws-profile $AWS_ACCESS_PROFILE --region $REGION --config serverless.yml --disable-cli-logs --out /tmp/build
      # - serverless deploy --stage $STAGE --aws-profile $AWS_ACCESS_PROFILE --region $REGION --config serverless-admin.yml --disable-cli-logs --out /tmp/build

  post_build:
    commands:
      - npm install aws-sdk
      # - npm run dynamo:migrate